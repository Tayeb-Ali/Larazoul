<?php

namespace App\Modules\DummyClass\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Modules\DummyClass\Models\DummyModelName;
use App\Modules\DummyClass\Http\Requests\Api\DummyClass\DummyClassRequest;
use Illuminate\Http\Request;
use App\Modules\DummyClass\Http\Resources\DummyClass  as DummyClassResources;
use Illuminate\Support\Facades\Validator;
use Larazoul\Larazoul\Traits\ApiTrait;
use Larazoul\Larazoul\Traits\UploadFile;

class DummyClassController extends Controller
{

    use ApiTrait ,  UploadFile;

    protected $model;
    protected $request;

    public function __construct(DummyModelName $model , Request $request)
    {
        $this->model = $model;
        $this->request = $request;
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */

    public function index()
    {
        $rows = $this->model;
DummyIndex
        $rows = $this->order($rows);

        $rows = $this->filter($rows);

        $rows = $rows->active()->paginate(10);

        return $this->apiResponse(DummyClassResources::collection($rows));
    }


    /*
    * filter data
    */

    protected function filter($rows){

DummyFilters
        return $rows;
    }

    /*
    * order data
    */

   protected function order($rows){

    $order = $this->request->has('orderByType') ? $this->request->get('orderByType') : "desc";

    if($this->request->has('orderBy') && $this->request->get('orderBy') != ''){
        $rows = $rows->orderBy($this->request->get('orderBy')  , $order);
    }else{
        $rows = $rows->orderBy('id'  , 'desc');
    }

    return $rows;

    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(DummyClassRequest $request)
    {
        $errors = Validator::make($this->request->all(), $request->rules());
        if ($errors->fails()) {
             return $this->validateResponseError($errors);
        }
DummyUploadFile
        $row = $this->model->create($this->request->all());
DummyRelation
        return $this->apiResponse(new DummyClassResources($row));
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $row = $this->model->active()->DummyShowEditfind($id);
        if(!$row){
            return $this->itemNotFoundResponseError();
        }
        return $this->apiResponse(new DummyClassResources($row));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(DummyClassRequest $request, $id)
    {
        $row = $this->model->find($id);
        if(!$row){
            return $this->itemNotFoundResponseError();
        }
        $errors = Validator::make($this->request->all(), $request->rules());
        if ($errors->fails()) {
            return $this->validateResponseError($errors);
        }
DummyEditUpload
        $row->update($this->request->all());
DummyRelation
        return $this->apiResponse(new DummyClassResources($row));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $row = $this->post->find($id);
        if(!$row){
            return $this->itemNotFoundResponseError();
        }
DummyDeleteFile
        $row->delete();
        return $this->apiResponse(true);
    }
}

<?php

namespace App\Http\Controllers;

use fullMstr;
use Illuminate\Http\Request;

class MasterController extends Controller
{
    /**
     * Display a listing of the singleMstr.
     *
     * @return \Illuminate\View\View
     */
    public function index()
    {
        $singleMstrQuery = Master::query();
        $singleMstrQuery->where('name', 'like', '%'.request('q').'%');
        $mstrCollections = $singleMstrQuery->paginate(25);

        return view('masters.index', compact('mstrCollections'));
    }

    /**
     * Show the form for creating a new singleMstr.
     *
     * @return \Illuminate\View\View
     */
    public function create()
    {
        $this->authorize('create', new Master);

        return view('masters.create');
    }

    /**
     * Store a newly created singleMstr in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Routing\Redirector
     */
    public function store(Request $request)
    {
        $this->authorize('create', new Master);

        $newMaster = $request->validate([
            'name'        => 'required|max:60',
            'description' => 'nullable|max:255',
        ]);
        $newMaster['creator_id'] = auth()->id();

        $singleMstr = Master::create($newMaster);

        return redirect()->route('masters.show', $singleMstr);
    }

    /**
     * Display the specified singleMstr.
     *
     * @param  \App\Master  $singleMstr
     * @return \Illuminate\View\View
     */
    public function show(Master $singleMstr)
    {
        return view('masters.show', compact('singleMstr'));
    }

    /**
     * Show the form for editing the specified singleMstr.
     *
     * @param  \App\Master  $singleMstr
     * @return \Illuminate\View\View
     */
    public function edit(Master $singleMstr)
    {
        $this->authorize('update', $singleMstr);

        return view('masters.edit', compact('singleMstr'));
    }

    /**
     * Update the specified singleMstr in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \fullMstr  $singleMstr
     * @return \Illuminate\Routing\Redirector
     */
    public function update(Request $request, Master $singleMstr)
    {
        $this->authorize('update', $singleMstr);

        $singleMstrData = $request->validate([
            'name'        => 'required|max:60',
            'description' => 'nullable|max:255',
        ]);
        $singleMstr->update($singleMstrData);

        return redirect()->route('masters.show', $singleMstr);
    }

    /**
     * Remove the specified singleMstr from storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \fullMstr  $singleMstr
     * @return \Illuminate\Routing\Redirector
     */
    public function destroy(Request $request, Master $singleMstr)
    {
        $this->authorize('delete', $singleMstr);

        $request->validate(['master_id' => 'required']);

        if ($request->get('master_id') == $singleMstr->id && $singleMstr->delete()) {
            return redirect()->route('masters.index');
        }

        return back();
    }
}
